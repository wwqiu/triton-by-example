diff --git a/gfpgan/archs/gfpganv1_clean_arch.py b/gfpgan/archs/gfpganv1_clean_arch.py
index d6c2705..5e5b6de 100644
--- a/gfpgan/archs/gfpganv1_clean_arch.py
+++ b/gfpgan/archs/gfpganv1_clean_arch.py
@@ -321,4 +321,4 @@ class GFPGANv1Clean(nn.Module):
                                          input_is_latent=self.input_is_latent,
                                          randomize_noise=randomize_noise)
 
-        return image, out_rgbs
+        return image
diff --git a/gfpgan/utils.py b/gfpgan/utils.py
index 74ee5a8..6381998 100644
--- a/gfpgan/utils.py
+++ b/gfpgan/utils.py
@@ -122,7 +122,10 @@ class GFPGANer():
             cropped_face_t = cropped_face_t.unsqueeze(0).to(self.device)
 
             try:
-                output = self.gfpgan(cropped_face_t, return_rgb=False, weight=weight)[0]
+                output = self.gfpgan(cropped_face_t, return_rgb=False, weight=weight)
+                if not os.path.exists("model.pt"):
+                    traced_script_module = torch.jit.trace(self.gfpgan, output)
+                    traced_script_module.save("model.pt")
                 # convert to image
                 restored_face = tensor2img(output.squeeze(0), rgb2bgr=True, min_max=(-1, 1))
             except RuntimeError as error:
